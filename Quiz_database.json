[{"model": "admin.logentry", "pk": 1, "fields": {"action_time": "2023-04-16T05:39:30.071Z", "user": 1, "content_type": 9, "object_id": "1", "object_repr": "QuizQuestion object (1)", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 2, "fields": {"action_time": "2023-04-16T05:46:13.841Z", "user": 1, "content_type": 9, "object_id": "1", "object_repr": "Question: What is Django? | Answer: A web framework", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 3, "fields": {"action_time": "2023-04-16T05:47:23.234Z", "user": 1, "content_type": 9, "object_id": "2", "object_repr": "Question: What is the purpose of a Django model? | Answer: To define the structure of a database table", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 4, "fields": {"action_time": "2023-04-16T05:48:45.929Z", "user": 1, "content_type": 9, "object_id": "3", "object_repr": "Question: What is the default database used by Django? | Answer: SQLite", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 5, "fields": {"action_time": "2023-04-16T05:49:03.879Z", "user": 1, "content_type": 9, "object_id": "1", "object_repr": "Question: What is Django? | Answer: A web framework", "action_flag": 2, "change_message": "[]"}}, {"model": "admin.logentry", "pk": 6, "fields": {"action_time": "2023-04-16T06:04:50.637Z", "user": 1, "content_type": 9, "object_id": "1", "object_repr": "Question: What is Django? | Answer: A web framework | Option_1: A programming language | Option_2: A web framework | Option_3: A database management system | Option_4: A text editor", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 7, "fields": {"action_time": "2023-04-16T06:09:53.271Z", "user": 1, "content_type": 9, "object_id": "2", "object_repr": "Question: What is the purpose of a Django model? | Answer: To define the structure of a database table | Option_1: To define the structure of a database table | Option_2: To create HTML templates | Op", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 8, "fields": {"action_time": "2023-04-16T06:17:03.202Z", "user": 1, "content_type": 9, "object_id": "3", "object_repr": "Question: What is the default database used by Django? | Answer: SQLite | Option_1: SQLite | Option_2: MySQL | Option_3: PostgreSQL | Option_4: Oracle", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 9, "fields": {"action_time": "2023-04-16T06:26:28.881Z", "user": 1, "content_type": 9, "object_id": "4", "object_repr": "Question: What is a Django view? | Answer: A function that handles HTTP requests | Option_1: A template for rendering HTML | Option_2: A function that handles HTTP requests | Option_3: To handle clien", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 10, "fields": {"action_time": "2023-04-16T06:28:06.092Z", "user": 1, "content_type": 9, "object_id": "5", "object_repr": "Question: What is the purpose of a Django URL pattern? | Answer: To map URLs to views | Option_1: To define the structure of a database table | Option_2: To create HTML templates | Option_3: To handle", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 11, "fields": {"action_time": "2023-04-16T06:29:25.694Z", "user": 1, "content_type": 9, "object_id": "6", "object_repr": "Question: How does Django handle user authentication? | Answer: By using built-in functions for handling login and registration | Option_1: By using built-in functions for handling login and registrat", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 12, "fields": {"action_time": "2023-04-16T06:31:52.872Z", "user": 1, "content_type": 9, "object_id": "7", "object_repr": "Question: What is the Django admin site? | Answer: A built-in web-based interface for managing database records | Option_1: A built-in web-based interface for managing database records | Option_2: A l", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 13, "fields": {"action_time": "2023-04-16T06:33:57.673Z", "user": 1, "content_type": 9, "object_id": "8", "object_repr": "Question: How does Django handle static files, such as CSS and JavaScript? | Answer: By serving them directly from the file system | Option_1: By storing them in the database | Option_2: By serving th", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 14, "fields": {"action_time": "2023-04-16T06:35:33.441Z", "user": 1, "content_type": 9, "object_id": "9", "object_repr": "Question: What is the purpose of a Django template? | Answer: To generate dynamic HTML | Option_1: To define the structure of a database table | Option_2: To create URL patterns | Option_3: To handle ", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 15, "fields": {"action_time": "2023-04-16T06:38:12.031Z", "user": 1, "content_type": 9, "object_id": "10", "object_repr": "Question: How does Django handle internationalization and localization? | Answer: By using built-in functions for translating text | Option_1: By using built-in functions for translating text | Option", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 16, "fields": {"action_time": "2023-04-19T15:25:53.735Z", "user": 1, "content_type": 14, "object_id": "1", "object_repr": "Question: What is the purpose of a Django migration? | Answer: To automatically update the database schema | Option_1: To create a backup of the database | Option_2: To handle user authentication | Op", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 17, "fields": {"action_time": "2023-04-19T15:26:24.749Z", "user": 1, "content_type": 14, "object_id": "1", "object_repr": "Question: What is the purpose of a Django migration? | Answer: To automatically update the database schema | Option_1: To create a backup of the database | Option_2: To handle user authentication | Op", "action_flag": 3, "change_message": ""}}, {"model": "admin.logentry", "pk": 18, "fields": {"action_time": "2023-04-19T15:27:36.408Z", "user": 1, "content_type": 10, "object_id": "11", "object_repr": "Question: What is the purpose of a Django migration? | Answer: To automatically update the database schema | Option_1: To create a backup of the database | Option_2: To handle user authentication | Op", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 19, "fields": {"action_time": "2023-04-20T13:18:39.843Z", "user": 1, "content_type": 10, "object_id": "12", "object_repr": "Question: What is the Django template language called? | Answer: DjangoTemplate | Option_1: DjangoScript | Option_2: DjangoHTML | Option_3: DjangoTemplate | Option_4: DjangoSyntax", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 20, "fields": {"action_time": "2023-04-20T13:21:11.824Z", "user": 1, "content_type": 10, "object_id": "13", "object_repr": "Question: What is a Django app? | Answer: A Python module that encapsulates a specific functionality of a Django project | Option_1: A Python module that encapsulates a specific functionality of a Dja", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 21, "fields": {"action_time": "2023-04-20T13:31:57.434Z", "user": 1, "content_type": 10, "object_id": "14", "object_repr": "Question: What is the purpose of a Django middleware? | Answer: To process requests and responses globally before they reach the view | Option_1: To handle user authentication | Option_2: To define th", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 22, "fields": {"action_time": "2023-04-20T13:55:30.699Z", "user": 1, "content_type": 10, "object_id": "15", "object_repr": "Question: What is the Django template context? | Answer: A dictionary that contains variables and their values for rendering templates | Option_1: A library for handling front-end web development | Op", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 23, "fields": {"action_time": "2023-04-20T14:04:28.502Z", "user": 1, "content_type": 10, "object_id": "16", "object_repr": "Question: What is the purpose of a Django form? | Answer: To handle form validation and data submission | Option_1: To define the structure of a database table | Option_2: To create HTML templates | O", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 24, "fields": {"action_time": "2023-04-20T14:05:38.642Z", "user": 1, "content_type": 10, "object_id": "17", "object_repr": "Question: What is the Django template tag used for including templates within templates? | Answer: {% include %} | Option_1: {% include %} | Option_2: {% extends %} | Option_3: {% block %} | Option_4:", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 25, "fields": {"action_time": "2023-04-20T14:08:34.325Z", "user": 1, "content_type": 10, "object_id": "18", "object_repr": "Question: What is the purpose of a Django template filter? | Answer: To process and format data in templates | Option_1: To define the structure of a model | Option_2: To create URL patterns | Option_", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 26, "fields": {"action_time": "2023-04-20T14:09:55.076Z", "user": 1, "content_type": 10, "object_id": "19", "object_repr": "Question: What is the Django database API called? | Answer: DjangoORM | Option_1: DjangoORM | Option_2: DjangoDB | Option_3: DjangoSQL | Option_4: DjangoData", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 27, "fields": {"action_time": "2023-04-20T14:31:40.529Z", "user": 1, "content_type": 10, "object_id": "20", "object_repr": "Question: How does Django handle routing and URL handling? | Answer: By using URL patterns and views | Option_1: By using URL patterns and views | Option_2: By storing URLs in the database | Option_3:", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 28, "fields": {"action_time": "2023-04-20T14:33:17.982Z", "user": 1, "content_type": 10, "object_id": "21", "object_repr": "Question: What is the purpose of a Django signal? | Answer: To allow different parts of a Django application to communicate with each other | Option_1: To define the structure of a model | Option_2: T", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 29, "fields": {"action_time": "2023-04-20T14:35:59.724Z", "user": 1, "content_type": 10, "object_id": "22", "object_repr": "Question: What is the Django built-in authentication system called? | Answer: Django.contrib.auth | Option_1: DjangoAuth | Option_2: Django.contrib.auth | Option_3: DjangoAuthenticator | Option_4: Dja", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 30, "fields": {"action_time": "2023-04-20T14:42:29.234Z", "user": 1, "content_type": 10, "object_id": "23", "object_repr": "Question: What is the purpose of Django's context processors? | Answer: To add additional variables to the template context | Option_1: To define the structure of a model | Option_2: To create URL pat", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 31, "fields": {"action_time": "2023-04-20T14:45:54.235Z", "user": 1, "content_type": 10, "object_id": "24", "object_repr": "Question: What is the Django test framework used for? | Answer: To write and run tests for Django applications | Option_1: To define the structure of a model | Option_2: To create URL patterns | Optio", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 32, "fields": {"action_time": "2023-04-20T15:01:21.178Z", "user": 1, "content_type": 10, "object_id": "25", "object_repr": "Question: What is the purpose of Django's static files app? | Answer: To serve static files such as CSS and JavaScript | Option_1: To define the structure of a database table | Option_2: To handle use", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 33, "fields": {"action_time": "2023-04-20T20:38:54.596Z", "user": 1, "content_type": 14, "object_id": "2", "object_repr": "Question: What is Python? | Answer: A scripting language | Option_1: A scripting language | Option_2: A compiled language | Option_3: Both | Option_4: None of the above", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 34, "fields": {"action_time": "2023-04-20T20:46:43.782Z", "user": 1, "content_type": 14, "object_id": "3", "object_repr": "Question: Which of the following is not a primitive data type in Python? | Answer: Array | Option_1: Integer | Option_2: Float | Option_3: String | Option_4: Array", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 35, "fields": {"action_time": "2023-04-20T20:49:33.166Z", "user": 1, "content_type": 14, "object_id": "4", "object_repr": "Question: Which of the following is a valid Python variable name? | Answer: All of the above | Option_1: myVariableName | Option_2: MyVariableName | Option_3: my_variable_name | Option_4: All of the a", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 36, "fields": {"action_time": "2023-04-20T20:50:43.094Z", "user": 1, "content_type": 14, "object_id": "5", "object_repr": "Question: What is the output of the following code?\r\nx = 2\r\ny = 3\r\nprint(x+y) | Answer: 5 | Option_1: 2 | Option_2: 3 | Option_3: 5 | Option_4: None of the above", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "admin.logentry", "pk": 37, "fields": {"action_time": "2023-04-20T20:53:49.728Z", "user": 1, "content_type": 14, "object_id": "6", "object_repr": "Question: What is the output of the following code?\r\nmy_list = [1, 2, 3, 4, 5]\r\nprint(my_list[1:4]) | Answer: [2, 3, 4] | Option_1: [1, 2, 3] | Option_2: [2, 3, 4] | Option_3: [2, 3, 4, 5] | Option_4:", "action_flag": 1, "change_message": "[{\"added\": {}}]"}}, {"model": "auth.permission", "pk": 1, "fields": {"name": "Can add log entry", "content_type": 1, "codename": "add_logentry"}}, {"model": "auth.permission", "pk": 2, "fields": {"name": "Can change log entry", "content_type": 1, "codename": "change_logentry"}}, {"model": "auth.permission", "pk": 3, "fields": {"name": "Can delete log entry", "content_type": 1, "codename": "delete_logentry"}}, {"model": "auth.permission", "pk": 4, "fields": {"name": "Can view log entry", "content_type": 1, "codename": "view_logentry"}}, {"model": "auth.permission", "pk": 5, "fields": {"name": "Can add permission", "content_type": 2, "codename": "add_permission"}}, {"model": "auth.permission", "pk": 6, "fields": {"name": "Can change permission", "content_type": 2, "codename": "change_permission"}}, {"model": "auth.permission", "pk": 7, "fields": {"name": "Can delete permission", "content_type": 2, "codename": "delete_permission"}}, {"model": "auth.permission", "pk": 8, "fields": {"name": "Can view permission", "content_type": 2, "codename": "view_permission"}}, {"model": "auth.permission", "pk": 9, "fields": {"name": "Can add group", "content_type": 3, "codename": "add_group"}}, {"model": "auth.permission", "pk": 10, "fields": {"name": "Can change group", "content_type": 3, "codename": "change_group"}}, {"model": "auth.permission", "pk": 11, "fields": {"name": "Can delete group", "content_type": 3, "codename": "delete_group"}}, {"model": "auth.permission", "pk": 12, "fields": {"name": "Can view group", "content_type": 3, "codename": "view_group"}}, {"model": "auth.permission", "pk": 13, "fields": {"name": "Can add user", "content_type": 4, "codename": "add_user"}}, {"model": "auth.permission", "pk": 14, "fields": {"name": "Can change user", "content_type": 4, "codename": "change_user"}}, {"model": "auth.permission", "pk": 15, "fields": {"name": "Can delete user", "content_type": 4, "codename": "delete_user"}}, {"model": "auth.permission", "pk": 16, "fields": {"name": "Can view user", "content_type": 4, "codename": "view_user"}}, {"model": "auth.permission", "pk": 17, "fields": {"name": "Can add content type", "content_type": 5, "codename": "add_contenttype"}}, {"model": "auth.permission", "pk": 18, "fields": {"name": "Can change content type", "content_type": 5, "codename": "change_contenttype"}}, {"model": "auth.permission", "pk": 19, "fields": {"name": "Can delete content type", "content_type": 5, "codename": "delete_contenttype"}}, {"model": "auth.permission", "pk": 20, "fields": {"name": "Can view content type", "content_type": 5, "codename": "view_contenttype"}}, {"model": "auth.permission", "pk": 21, "fields": {"name": "Can add session", "content_type": 6, "codename": "add_session"}}, {"model": "auth.permission", "pk": 22, "fields": {"name": "Can change session", "content_type": 6, "codename": "change_session"}}, {"model": "auth.permission", "pk": 23, "fields": {"name": "Can delete session", "content_type": 6, "codename": "delete_session"}}, {"model": "auth.permission", "pk": 24, "fields": {"name": "Can view session", "content_type": 6, "codename": "view_session"}}, {"model": "auth.permission", "pk": 25, "fields": {"name": "Can add question", "content_type": 7, "codename": "add_question"}}, {"model": "auth.permission", "pk": 26, "fields": {"name": "Can change question", "content_type": 7, "codename": "change_question"}}, {"model": "auth.permission", "pk": 27, "fields": {"name": "Can delete question", "content_type": 7, "codename": "delete_question"}}, {"model": "auth.permission", "pk": 28, "fields": {"name": "Can view question", "content_type": 7, "codename": "view_question"}}, {"model": "auth.permission", "pk": 29, "fields": {"name": "Can add score", "content_type": 8, "codename": "add_score"}}, {"model": "auth.permission", "pk": 30, "fields": {"name": "Can change score", "content_type": 8, "codename": "change_score"}}, {"model": "auth.permission", "pk": 31, "fields": {"name": "Can delete score", "content_type": 8, "codename": "delete_score"}}, {"model": "auth.permission", "pk": 32, "fields": {"name": "Can view score", "content_type": 8, "codename": "view_score"}}, {"model": "auth.permission", "pk": 33, "fields": {"name": "Can add quiz question", "content_type": 9, "codename": "add_quizquestion"}}, {"model": "auth.permission", "pk": 34, "fields": {"name": "Can change quiz question", "content_type": 9, "codename": "change_quizquestion"}}, {"model": "auth.permission", "pk": 35, "fields": {"name": "Can delete quiz question", "content_type": 9, "codename": "delete_quizquestion"}}, {"model": "auth.permission", "pk": 36, "fields": {"name": "Can view quiz question", "content_type": 9, "codename": "view_quizquestion"}}, {"model": "auth.permission", "pk": 37, "fields": {"name": "Can add django quiz question", "content_type": 10, "codename": "add_djangoquizquestion"}}, {"model": "auth.permission", "pk": 38, "fields": {"name": "Can change django quiz question", "content_type": 10, "codename": "change_djangoquizquestion"}}, {"model": "auth.permission", "pk": 39, "fields": {"name": "Can delete django quiz question", "content_type": 10, "codename": "delete_djangoquizquestion"}}, {"model": "auth.permission", "pk": 40, "fields": {"name": "Can view django quiz question", "content_type": 10, "codename": "view_djangoquizquestion"}}, {"model": "auth.permission", "pk": 41, "fields": {"name": "Can add css quiz question", "content_type": 11, "codename": "add_cssquizquestion"}}, {"model": "auth.permission", "pk": 42, "fields": {"name": "Can change css quiz question", "content_type": 11, "codename": "change_cssquizquestion"}}, {"model": "auth.permission", "pk": 43, "fields": {"name": "Can delete css quiz question", "content_type": 11, "codename": "delete_cssquizquestion"}}, {"model": "auth.permission", "pk": 44, "fields": {"name": "Can view css quiz question", "content_type": 11, "codename": "view_cssquizquestion"}}, {"model": "auth.permission", "pk": 45, "fields": {"name": "Can add html quiz question", "content_type": 12, "codename": "add_htmlquizquestion"}}, {"model": "auth.permission", "pk": 46, "fields": {"name": "Can change html quiz question", "content_type": 12, "codename": "change_htmlquizquestion"}}, {"model": "auth.permission", "pk": 47, "fields": {"name": "Can delete html quiz question", "content_type": 12, "codename": "delete_htmlquizquestion"}}, {"model": "auth.permission", "pk": 48, "fields": {"name": "Can view html quiz question", "content_type": 12, "codename": "view_htmlquizquestion"}}, {"model": "auth.permission", "pk": 49, "fields": {"name": "Can add javascript quiz question", "content_type": 13, "codename": "add_javascriptquizquestion"}}, {"model": "auth.permission", "pk": 50, "fields": {"name": "Can change javascript quiz question", "content_type": 13, "codename": "change_javascriptquizquestion"}}, {"model": "auth.permission", "pk": 51, "fields": {"name": "Can delete javascript quiz question", "content_type": 13, "codename": "delete_javascriptquizquestion"}}, {"model": "auth.permission", "pk": 52, "fields": {"name": "Can view javascript quiz question", "content_type": 13, "codename": "view_javascriptquizquestion"}}, {"model": "auth.permission", "pk": 53, "fields": {"name": "Can add python quiz question", "content_type": 14, "codename": "add_pythonquizquestion"}}, {"model": "auth.permission", "pk": 54, "fields": {"name": "Can change python quiz question", "content_type": 14, "codename": "change_pythonquizquestion"}}, {"model": "auth.permission", "pk": 55, "fields": {"name": "Can delete python quiz question", "content_type": 14, "codename": "delete_pythonquizquestion"}}, {"model": "auth.permission", "pk": 56, "fields": {"name": "Can view python quiz question", "content_type": 14, "codename": "view_pythonquizquestion"}}, {"model": "auth.user", "pk": 1, "fields": {"password": "pbkdf2_sha256$600000$dBm5T8WkyAky3UXnOXdn9y$oKVnPBbZfAz/CHf3xhDMtLRIvEiuFGJqhzFZLDhYZKM=", "last_login": "2023-04-20T13:16:24.749Z", "is_superuser": true, "username": "admin", "first_name": "", "last_name": "", "email": "admin@example.com", "is_staff": true, "is_active": true, "date_joined": "2023-04-15T17:04:33.279Z", "groups": [], "user_permissions": []}}, {"model": "contenttypes.contenttype", "pk": 1, "fields": {"app_label": "admin", "model": "logentry"}}, {"model": "contenttypes.contenttype", "pk": 2, "fields": {"app_label": "auth", "model": "permission"}}, {"model": "contenttypes.contenttype", "pk": 3, "fields": {"app_label": "auth", "model": "group"}}, {"model": "contenttypes.contenttype", "pk": 4, "fields": {"app_label": "auth", "model": "user"}}, {"model": "contenttypes.contenttype", "pk": 5, "fields": {"app_label": "contenttypes", "model": "contenttype"}}, {"model": "contenttypes.contenttype", "pk": 6, "fields": {"app_label": "sessions", "model": "session"}}, {"model": "contenttypes.contenttype", "pk": 7, "fields": {"app_label": "quiz_app", "model": "question"}}, {"model": "contenttypes.contenttype", "pk": 8, "fields": {"app_label": "quiz_app", "model": "score"}}, {"model": "contenttypes.contenttype", "pk": 9, "fields": {"app_label": "quiz_app", "model": "quizquestion"}}, {"model": "contenttypes.contenttype", "pk": 10, "fields": {"app_label": "quiz_app", "model": "djangoquizquestion"}}, {"model": "contenttypes.contenttype", "pk": 11, "fields": {"app_label": "quiz_app", "model": "cssquizquestion"}}, {"model": "contenttypes.contenttype", "pk": 12, "fields": {"app_label": "quiz_app", "model": "htmlquizquestion"}}, {"model": "contenttypes.contenttype", "pk": 13, "fields": {"app_label": "quiz_app", "model": "javascriptquizquestion"}}, {"model": "contenttypes.contenttype", "pk": 14, "fields": {"app_label": "quiz_app", "model": "pythonquizquestion"}}, {"model": "sessions.session", "pk": "59d97oaymwxisxsxzn51k1xkrvmhvx8w", "fields": {"session_data": "eyJzZWxlY3RlZF9vcHRpb24iOiJEamFuZ28ifQ:1ppMwt:Ihs5CTXlCxtprtJwHo4yAvEGH0HxVZbkp796j2wIfWI", "expire_date": "2023-05-04T05:35:15.337Z"}}, {"model": "sessions.session", "pk": "7dw68e3yf8vogyi4xdt49ocvkxqpytzd", "fields": {"session_data": ".eJydlE1Lw0AQhv_KsCfFXJoPDwERPQgeLIKghzSEbbJNFja7MZm0DaX_3UnT0K5GLN5mZ96ZeZ_Nkh1rhBIpiiwxFUqjWcheOywocNhnK5o-17Aw2jGZsdA9JUn4UXAE2cDQcE8dXDcbUVPpAZq0ljRR56C4zlueC6oPO5LZnwr3oEhNWUklsgmBR4JHg8Up41NmbrQAswIsBPClWQu2dwbn3jfnMi1G4cooZTa9D2LRBoFDVctSolwLyDhywK4SIPUkaF3zziZ71ihyKlowT8pwtO2_YU1LbYBh3Gjav9A0hzVXMjv6o0Mt-VIJ0LwUtlul7OuxjJfd-7FzTo22_5dfat6hLxlXJtqq-lM7R7pg8jH1OtNi1eJP1NRk4n5RL_QW7sDtg44Crw_oi2m82t501-e8gQ3o2kyejRFc-pZu_2-crkrJBsl1NHPAdcBzwHcgiE8MR0k0C_3YgomO8tiGGgfFNtyE2jtL9ztt3jNDMdvHDkODXCVnP4Fg_wV8VV3i:1ppulC:JOZ-vXTS91Smk6U-lZzIzLcckKL4fyXl_BW6xOPjJoU", "expire_date": "2023-05-05T17:41:26.043Z"}}, {"model": "sessions.session", "pk": "g4ohnrpco5ajxmizx0tpunimsjg0q7g5", "fields": {"session_data": ".eJzNWVtvFDcU_ivWSqgvCepuFkp5qUJ5gApESoL6UFWRd-ydNXjsqe3JMkX57z3HnpvnkuwsQcoDAmyfM-d8_s7N-21hueSJ4-xa505otXi5eP2ZqlQvThb_Ftziml28_PvbQrDFy2W7CAf_2lFHhCVB4DeQoMruuYGtc7LnG7I1NON7bb7AVlB_vfSbudEp7GVCpUSCcEFT3p5Z3aXgzG8y6uiGWk4yqkA248oRW1rHs_bk2p90_KsjnAmnzeL2JLixGnXD7TjJC5NrUKu3hFZ-kUwzLiPvrjRhfCsU9zLWmSJxhamkGtPgL8ljz48SXAXBxHDqOHlz9f4dOJXlEv5nY1zg1I4qJjlJpABITq1g8JnECDij0hia9nBhuSG0AJOUEwn1sNRQnU1CBY7QQrrWbFDDyKYco8Pln--E62HRX0M335ewGvt0oa1LDY_W0fwPhiaAUm3netTO5g5vBN_3CLotVILHwRk4HKCwAO_VBTHc67J92tawk602cEgxbpDBeCV99s7SfszdZTQnnz6-g7sI3tkGimez2A06SE6d40b1OT78xGMm8zQgzyNA3ug9YZrXaeuOIIjweFXCEbztTSGkOxWquWLr6eDV-HymU9iE_8FFpwJgCQEVQfdgylZBmYXshsdzai2kS2YJSAGoQmH6i3Ftvu12wrDTnBpXEik2hhoBqGglyxjbRsDqRFBJMsimNFhWHa-B_mWSeRXWlEHKJxbivheMDQ6Q9U-RN4yg7WZLkxBtPs-jEQ2xDE_Q036MPoSmEMIBkzK-kK3RQEUIfV-fGL_hUudYfvoVymktvahDQECyhiDPZcUv269Vic7AOnYqMagmrK7UQAX9DHW7JfmLQ0huHXw4IVsByeiE2CLZEWrJ75eXnmJ_0Bt66eOrz3yIjZtAGZ4RJgAwJ0vEIvO3i_oG5XcZU9OLChVKR4X8kMdHfOdYTvNswxnrmtbLRjWyv87Kp7V8P5mmXHGDOY-VimZwCXHVeKCE2snm35lOx-2tMVn-fAjdPIWV5zqV4j__D880qZNmYVaWhQSoLMDrry1KbYek1Wnp1VwSVayDsCyoBI52VcNCaDsruo8UuIqDUG90hiE50OHlQ_rSQQsWqJ8seXsBWZQZbluCLsfb8sl-VqRmiDxceWxNkTO8_m68Al0gVOiAtRX5KBicfCly_Np0mN_dd_Y5Ox0Qvi0f0PZgHxrwpoeBXkQ3kwpB5ZxF8IWzV9XRGKGwFzJrjEXYiTPB2R3a1q22Ujn6tfVivE-nnarTq7gXpdsBswDFQvLQpXKV0NwWnqoganOeiC2WiyqIIGQhIrpUqqpQvwb_GN2hKmOx8nXAqw30sBU_SuyxMdCnlYTi3Fa6jq66SR_NjxjL01rX8VDqU3RQiuUPdI5QHTSCqVk8bi3H55jpUGZg8p6aQbkBExPIEc2wUfWQNodcCPakUm98hGw4GOEjpIRtCg0Bfgv750GUHxK1q5lRe3ZA9Vo_mEcNytMjUj_mE-1b6F7wMBFIC92hv2U8RbEdvoFagZcfrAOFwsCaLCpetjPjSE1YflfXufpxhh3f0H5HM97c1fNZEYEh1Y-Firi4hT4L1jYi-FnogzeZsHYwpT2yAXeGGw14905kDdEdTcMLDl6LUIksWEQHshfQF6l2IUL525NKhpMntzGKE1ursAWxBdSz0dZZ2NpAl_gl2liHDakpw_XGyxdHdeiY-oGLU5kTcQ0JOsDb9X0GT3oJ70e16wdZ3QA2PdJUGDXsPr94O93ufPj4fqzTiZbbNuf1q7EmZ_CwVx0GA9r32oOmDaOL0H4DBAhsnT3HB4wu9F5k5IXr4MO9Zxj_DDU56x47sO6oYYlm3Q9MTKyreQOBFSn0X4NpQErEWWy33ODzOtpoI7lO5sdHN3y9KBQucJ8siC--Gr5qHl-8PKh3De73zhJNQez1guFRYzrSnmIhN2LzFOXGYu48Wl_dJ3gWCVaGaDMWiZ-g3-tQa_oHgQ61giRMq1X7VKcnbeyAZozhHxGGgE6fAph3h-da1SOk0lwPGiynm_2mVFnX_gjW1Oc-hnsjcPzGfrhQXih0dXd2aI8FvjnGN8gd9BtHw8Lus-dgFAYT8Nkxfhy942304XrEGc8g97ST62P8uP3nZOG0o_K680Pv6tnt_x-HcSs:1pptTt:fPX0HJwt-Bk9gPterJdFCOC8i6GzUHqfTA4RlrWzhbc", "expire_date": "2023-05-05T16:19:29.487Z"}}, {"model": "sessions.session", "pk": "hxlhazqgclj3i048gdwvz9jqtywvmdnv", "fields": {"session_data": ".eJydlE1Lw0AQhv_KsCfFXJoPDwERPQgeLIKghzSEbbJNFja7MZm0DaX_3UnT0K5GLN5mZ96ZeZ_Nkh1rhBIpiiwxFUqjWcheOywocNhnK5o-17Aw2jGZsdA9JUn4UXAE2cDQcE8dXDcbUVPpAZq0ljRR56C4zlueC6oPO5LZnwr3oEhNWUklsgmBR4JHg8Up41NmbrQAswIsBPClWQu2dwbn3jfnMi1G4cooZTa9D2LRBoFDVctSolwLyDhywK4SIPUkaF3zziZ71ihyKlowT8pwtO2_YU1LbYBh3Gjav9A0hzVXMjv6o0Mt-VIJ0LwUtlul7OuxjJfd-7FzTo22_5dfat6hLxlXJtqq-lM7R7pg8jH1OtNi1eJP1NRk4n5RL_QW7sDtg44Crw_oi2m82t501-e8gQ3o2kyejRFc-pZu_2-crkrJBsl1NHPAdcBzwHcgiE8MR0k0C_3YgomO8tiGGgfFNtyE2jtL9ztt3jNDMdvHDkODXCVnP4Fg_wV8VV3i:1ppmF1:nxu7NUW2gPraR5euysJ7-kCYxGn3iajJiImNkJY9qKU", "expire_date": "2023-05-05T08:35:39.311Z"}}, {"model": "sessions.session", "pk": "js1kpnvguiryjtqxbdwi0puwxoukpqiy", "fields": {"session_data": ".eJydlE1Lw0AQhv_KsCfFXJoPDwERPQgeLIKghzSEbbJNFja7MZm0DaX_3UnT0K5GLN5mZ96ZeZ_Nkh1rhBIpiiwxFUqjWcheOywocNhnK5o-17Aw2jGZsdA9JUn4UXAE2cDQcE8dXDcbUVPpAZq0ljRR56C4zlueC6oPO5LZnwr3oEhNWUklsgmBR4JHg8Up41NmbrQAswIsBPClWQu2dwbn3jfnMi1G4cooZTa9D2LRBoFDVctSolwLyDhywK4SIPUkaF3zziZ71ihyKlowT8pwtO2_YU1LbYBh3Gjav9A0hzVXMjv6o0Mt-VIJ0LwUtlul7OuxjJfd-7FzTo22_5dfat6hLxlXJtqq-lM7R7pg8jH1OtNi1eJP1NRk4n5RL_QW7sDtg44Crw_oi2m82t501-e8gQ3o2kyejRFc-pZu_2-crkrJBsl1NHPAdcBzwHcgiE8MR0k0C_3YgomO8tiGGgfFNtyE2jtL9ztt3jNDMdvHDkODXCVnP4Fg_wV8VV3i:1pptpM:AL2_Wh_MDmc8h0CF_Yv6HTmQiVRGDsaJwTBygs1vMdA", "expire_date": "2023-05-05T16:41:40.677Z"}}, {"model": "sessions.session", "pk": "lljuc5y8l8qt0ntd7kim2xr24l59poc5", "fields": {"session_data": ".eJydlE1Lw0AQhv_KsCfFXJoPDwERPQgeLIKghzSEbbJNFja7MZm0DaX_3UnT0K5GLN5mZ96ZeZ_Nkh1rhBIpiiwxFUqjWcheOywocNhnK5o-17Aw2jGZsdA9JUn4UXAE2cDQcE8dXDcbUVPpAZq0ljRR56C4zlueC6oPO5LZnwr3oEhNWUklsgmBR4JHg8Up41NmbrQAswIsBPClWQu2dwbn3jfnMi1G4cooZTa9D2LRBoFDVctSolwLyDhywK4SIPUkaF3zziZ71ihyKlowT8pwtO2_YU1LbYBh3Gjav9A0hzVXMjv6o0Mt-VIJ0LwUtlul7OuxjJfd-7FzTo22_5dfat6hLxlXJtqq-lM7R7pg8jH1OtNi1eJP1NRk4n5RL_QW7sDtg44Crw_oi2m82t501-e8gQ3o2kyejRFc-pZu_2-crkrJBsl1NHPAdcBzwHcgiE8MR0k0C_3YgomO8tiGGgfFNtyE2jtL9ztt3jNDMdvHDkODXCVnP4Fg_wV8VV3i:1ppcFv:buRpgcy4cOT1Xxj8osOxENFZHPG-Au6a04c19Xxgzfw", "expire_date": "2023-05-04T21:55:55.102Z"}}, {"model": "sessions.session", "pk": "p802oihixrr6h2ajji8jmtyqi63m2bjs", "fields": {"session_data": ".eJzNWVtvFDcU_ivWSqgvCepuFkp5qUJ5gApESoL6UFWRd-ydNXjsqe3JMkX57z3HnpvnkuwsQcoDAmyfM-d8_s7N-21hueSJ4-xa505otXi5eP2ZqlQvThb_Ftziml28_PvbQrDFy2W7CAf_2lFHhCVB4DeQoMruuYGtc7LnG7I1NON7bb7AVlB_vfSbudEp7GVCpUSCcEFT3p5Z3aXgzG8y6uiGWk4yqkA248oRW1rHs_bk2p90_KsjnAmnzeL2JLixGnXD7TjJC5NrUKu3hFZ-kUwzLiPvrjRhfCsU9zLWmSJxhamkGtPgL8ljz48SXAXBxHDqOHlz9f4dOJXlEv5nY1zg1I4qJjlJpABITq1g8JnECDij0hia9nBhuSG0AJOUEwn1sNRQnU1CBY7QQrrWbFDDyKYco8Pln--E62HRX0M335ewGvt0oa1LDY_W0fwPhiaAUm3netTO5g5vBN_3CLotVILHwRk4HKCwAO_VBTHc67J92tawk602cEgxbpDBeCV99s7SfszdZTQnnz6-g7sI3tkGimez2A06SE6d40b1OT78xGMm8zQgzyNA3ug9YZrXaeuOIIjweFXCEbztTSGkOxWquWLr6eDV-HymU9iE_8FFpwJgCQEVQfdgylZBmYXshsdzai2kS2YJSAGoQmH6i3Ftvu12wrDTnBpXEik2hhoBqGglyxjbRsDqRFBJMsimNFhWHa-B_mWSeRXWlEHKJxbivheMDQ6Q9U-RN4yg7WZLkxBtPs-jEQ2xDE_Q036MPoSmEMIBkzK-kK3RQEUIfV-fGL_hUudYfvoVymktvahDQECyhiDPZcUv269Vic7AOnYqMagmrK7UQAX9DHW7JfmLQ0huHXw4IVsByeiE2CLZEWrJ75eXnmJ_0Bt66eOrz3yIjZtAGZ4RJgAwJ0vEIvO3i_oG5XcZU9OLChVKR4X8kMdHfOdYTvNswxnrmtbLRjWyv87Kp7V8P5mmXHGDOY-VimZwCXHVeKCE2snm35lOx-2tMVn-fAjdPIWV5zqV4j__D880qZNmYVaWhQSoLMDrry1KbYek1Wnp1VwSVayDsCyoBI52VcNCaDsruo8UuIqDUG90hiE50OHlQ_rSQQsWqJ8seXsBWZQZbluCLsfb8sl-VqRmiDxceWxNkTO8_m68Al0gVOiAtRX5KBicfCly_Np0mN_dd_Y5Ox0Qvi0f0PZgHxrwpoeBXkQ3kwpB5ZxF8IWzV9XRGKGwFzJrjEXYiTPB2R3a1q22Ujn6tfVivE-nnarTq7gXpdsBswDFQvLQpXKV0NwWnqoganOeiC2WiyqIIGQhIrpUqqpQvwb_GN2hKmOx8nXAqw30sBU_SuyxMdCnlYTi3Fa6jq66SR_NjxjL01rX8VDqU3RQiuUPdI5QHTSCqVk8bi3H55jpUGZg8p6aQbkBExPIEc2wUfWQNodcCPakUm98hGw4GOEjpIRtCg0Bfgv750GUHxK1q5lRe3ZA9Vo_mEcNytMjUj_mE-1b6F7wMBFIC92hv2U8RbEdvoFagZcfrAOFwsCaLCpetjPjSE1YflfXufpxhh3f0H5HM97c1fNZEYEh1Y-Firi4hT4L1jYi-FnogzeZsHYwpT2yAXeGGw14905kDdEdTcMLDl6LUIksWEQHshfQF6l2IUL525NKhpMntzGKE1ursAWxBdSz0dZZ2NpAl_gl2liHDakpw_XGyxdHdeiY-oGLU5kTcQ0JOsDb9X0GT3oJ70e16wdZ3QA2PdJUGDXsPr94O93ufPj4fqzTiZbbNuf1q7EmZ_CwVx0GA9r32oOmDaOL0H4DBAhsnT3HB4wu9F5k5IXr4MO9Zxj_DDU56x47sO6oYYlm3Q9MTKyreQOBFSn0X4NpQErEWWy33ODzOtpoI7lO5sdHN3y9KBQucJ8siC--Gr5qHl-8PKh3De73zhJNQez1guFRYzrSnmIhN2LzFOXGYu48Wl_dJ3gWCVaGaDMWiZ-g3-tQa_oHgQ61giRMq1X7VKcnbeyAZozhHxGGgE6fAph3h-da1SOk0lwPGiynm_2mVFnX_gjW1Oc-hnsjcPzGfrhQXih0dXd2aI8FvjnGN8gd9BtHw8Lus-dgFAYT8Nkxfhy942304XrEGc8g97ST62P8uP3nZOG0o_K680Pv6tnt_x-HcSs:1pptH7:1sqKDUZTr_RlF_fBkJRQan_SDx6Tuyc7g0cGE9J5Tfg", "expire_date": "2023-05-05T16:06:17.548Z"}}, {"model": "sessions.session", "pk": "q34cbq41rhsjrrinna2o6vr0xghsjn0m", "fields": {"session_data": ".eJydlE1Lw0AQhv_KsCfFXJoPDwERPQgeLIKghzSEbbJNFja7MZm0DaX_3UnT0K5GLN5mZ96ZeZ_Nkh1rhBIpiiwxFUqjWcheOywocNhnK5o-17Aw2jGZsdA9JUn4UXAE2cDQcE8dXDcbUVPpAZq0ljRR56C4zlueC6oPO5LZnwr3oEhNWUklsgmBR4JHg8Up41NmbrQAswIsBPClWQu2dwbn3jfnMi1G4cooZTa9D2LRBoFDVctSolwLyDhywK4SIPUkaF3zziZ71ihyKlowT8pwtO2_YU1LbYBh3Gjav9A0hzVXMjv6o0Mt-VIJ0LwUtlul7OuxjJfd-7FzTo22_5dfat6hLxlXJtqq-lM7R7pg8jH1OtNi1eJP1NRk4n5RL_QW7sDtg44Crw_oi2m82t501-e8gQ3o2kyejRFc-pZu_2-crkrJBsl1NHPAdcBzwHcgiE8MR0k0C_3YgomO8tiGGgfFNtyE2jtL9ztt3jNDMdvHDkODXCVnP4Fg_wV8VV3i:1ppujz:0W6rE7mzZw7AAW087EalwDp5L2H6UmnZAkwHn8WklY4", "expire_date": "2023-05-05T17:40:11.063Z"}}, {"model": "sessions.session", "pk": "sweta1rdksdn4y699phiba5a0mxtx1ay", "fields": {"session_data": ".eJydlE1Lw0AQhv_KsCfFXJoPDwERPQgeLIKghzSEbbJNFja7MZm0DaX_3UnT0K5GLN5mZ96ZeZ_Nkh1rhBIpiiwxFUqjWcheOywocNhnK5o-17Aw2jGZsdA9JUn4UXAE2cDQcE8dXDcbUVPpAZq0ljRR56C4zlueC6oPO5LZnwr3oEhNWUklsgmBR4JHg8Up41NmbrQAswIsBPClWQu2dwbn3jfnMi1G4cooZTa9D2LRBoFDVctSolwLyDhywK4SIPUkaF3zziZ71ihyKlowT8pwtO2_YU1LbYBh3Gjav9A0hzVXMjv6o0Mt-VIJ0LwUtlul7OuxjJfd-7FzTo22_5dfat6hLxlXJtqq-lM7R7pg8jH1OtNi1eJP1NRk4n5RL_QW7sDtg44Crw_oi2m82t501-e8gQ3o2kyejRFc-pZu_2-crkrJBsl1NHPAdcBzwHcgiE8MR0k0C_3YgomO8tiGGgfFNtyE2jtL9ztt3jNDMdvHDkODXCVnP4Fg_wV8VV3i:1ppcLA:t9YyZkEa_PdGtqAgo_kJ3746uilYr-X8tk0Kp5F7BUY", "expire_date": "2023-05-04T22:01:20.332Z"}}, {"model": "sessions.session", "pk": "w3fix0rg39jukco1ngh39amy3yfvl7gn", "fields": {"session_data": ".eJxVjkEOwiAURO_C2pAWWigujVvPQPifj6020BS6Mt5darrQ7cybl3kx67Yy2i3TaifPzqxlp98MHD4p7oV_uHhPHFMs6wR8R_jRZn5LnubLwf4JRpfHukbwgw5KGwCS2OgBJAiBUpom9GiGjlB0UvUKQ1NJrVWQFW8BDbbQiSrNNBMW8jYtZUqxSq_fS-z9AVlrQWo:1ppFsg:91DF3JSwWIl6stEXyQKV9B1J4Zdg8OCpQTqLYTf8DUI", "expire_date": "2023-05-03T22:02:26.907Z"}}, {"model": "sessions.session", "pk": "z96w2gxb2h73n7r0axbnb0eatnvn8d05", "fields": {"session_data": ".eJydlN-LnDAQx_-VkKeWyrIaf-wulKP3UOjDHYVC-7AnksSoaWNiNe6dHPu_d7xV1rSWHn0bZ76T-X4mwWfcCSW4FXlmGiuNxgf8ebAVBB7-2YtuzGW6r5lo8WHr4Yz2tsr6TrSZzEHsYyfHKP8h9FjIv1Ndmg032raSbUbJZqp2mzuTC3U7aZ0DKtpV0M1ZvkuKONkzJgjfJjtGWBBwQvbbIuL7XSh4EJI4inmxBWWSxAUBuc_4nvssDBbuO3w4PuPRbHBNwohvFbVIduiCewMdVHePIyb-gDreStiHLpECjJ6WAuqXDWX-PxXBi4KbupFK5CsCAoJbY6trJoTMvdECmQLZSiDKzEngs3dxTn5zLnk1CwujlHkcfQCLNhZR1LSyllaeBMqppcgOjUBSr4K2LR1csk_aihKKDsxHZah17X-Ba9WlC3A5bjYdvtI0RSeqZD75g49WUqYE0rQWrlul3PU4xuvh69R5D42u_7u_1MhLXzaPzLRTDddmznTR6mMadaa3TW__ROXw6G8e2gf9hN6jYAwGCMgYwI1p--bp3fB2yRu5gIHLRFyM6LVvKf5_47AqJTsLro--hwIPEQ-FHorSK8MkOfqHMHVgjpM8daHmg1IXbkVNFulxpsu7MJTic-phayxV2eInEJ1_AcjNnDc:1ppcAq:wi-8Fx3lkDv4_rBnTs71tk_qnXv-popGEMKGwKbBM7Y", "expire_date": "2023-05-04T21:50:40.045Z"}}, {"model": "quiz_app.djangoquizquestion", "pk": 1, "fields": {"question": "What is Django?", "answer": "A web framework", "option_1": "A programming language", "option_2": "A web framework", "option_3": "A database management system", "option_4": "A text editor"}}, {"model": "quiz_app.djangoquizquestion", "pk": 2, "fields": {"question": "What is the purpose of a Django model?", "answer": "To define the structure of a database table", "option_1": "To define the structure of a database table", "option_2": "To create HTML templates", "option_3": "To handle client-side scripting", "option_4": "To handle user authentication"}}, {"model": "quiz_app.djangoquizquestion", "pk": 3, "fields": {"question": "What is the default database used by Django?", "answer": "SQLite", "option_1": "SQLite", "option_2": "MySQL", "option_3": "PostgreSQL", "option_4": "Oracle"}}, {"model": "quiz_app.djangoquizquestion", "pk": 4, "fields": {"question": "What is a Django view?", "answer": "A function that handles HTTP requests", "option_1": "A template for rendering HTML", "option_2": "A function that handles HTTP requests", "option_3": "To handle client-side scripting", "option_4": "To map URLs to views"}}, {"model": "quiz_app.djangoquizquestion", "pk": 5, "fields": {"question": "What is the purpose of a Django URL pattern?", "answer": "To map URLs to views", "option_1": "To define the structure of a database table", "option_2": "To create HTML templates", "option_3": "To handle client-side scripting", "option_4": "To map URLs to views"}}, {"model": "quiz_app.djangoquizquestion", "pk": 6, "fields": {"question": "How does Django handle user authentication?", "answer": "By using built-in functions for handling login and registration", "option_1": "By using built-in functions for handling login and registration", "option_2": "By storing passwords in plaintext", "option_3": "By using third-party libraries only", "option_4": "By using social media logins only"}}, {"model": "quiz_app.djangoquizquestion", "pk": 7, "fields": {"question": "What is the Django admin site?", "answer": "A built-in web-based interface for managing database records", "option_1": "A built-in web-based interface for managing database records", "option_2": "A library for handling front-end web development", "option_3": "A tool for testing Django applications", "option_4": "A command-line interface for managing Django projects"}}, {"model": "quiz_app.djangoquizquestion", "pk": 8, "fields": {"question": "How does Django handle static files, such as CSS and JavaScript?", "answer": "By serving them directly from the file system", "option_1": "By storing them in the database", "option_2": "By serving them directly from the file system", "option_3": "By using third-party libraries only", "option_4": "By embedding them in HTML templates"}}, {"model": "quiz_app.djangoquizquestion", "pk": 9, "fields": {"question": "What is the purpose of a Django template?", "answer": "To generate dynamic HTML", "option_1": "To define the structure of a database table", "option_2": "To create URL patterns", "option_3": "To handle client-side scripting", "option_4": "To generate dynamic HTML"}}, {"model": "quiz_app.djangoquizquestion", "pk": 10, "fields": {"question": "How does Django handle internationalization and localization?", "answer": "By using built-in functions for translating text", "option_1": "By using built-in functions for translating text", "option_2": "By using third-party libraries only", "option_3": "By manually translating all text in the templates", "option_4": "By automatically translating text based on the user's IP address"}}, {"model": "quiz_app.djangoquizquestion", "pk": 11, "fields": {"question": "What is the purpose of a Django migration?", "answer": "To automatically update the database schema", "option_1": "To create a backup of the database", "option_2": "To handle user authentication", "option_3": "To define the structure of a model", "option_4": "To automatically update the database schema"}}, {"model": "quiz_app.djangoquizquestion", "pk": 12, "fields": {"question": "What is the Django template language called?", "answer": "DjangoTemplate", "option_1": "DjangoScript", "option_2": "DjangoHTML", "option_3": "DjangoTemplate", "option_4": "DjangoSyntax"}}, {"model": "quiz_app.djangoquizquestion", "pk": 13, "fields": {"question": "What is a Django app?", "answer": "A Python module that encapsulates a specific functionality of a Django project", "option_1": "A Python module that encapsulates a specific functionality of a Django project", "option_2": "A CSS file that defines the styles for a Django project", "option_3": "A JavaScript file that handles client-side scripting in a Django project", "option_4": "A database table that stores user authentication information"}}, {"model": "quiz_app.djangoquizquestion", "pk": 14, "fields": {"question": "What is the purpose of a Django middleware?", "answer": "To process requests and responses globally before they reach the view", "option_1": "To handle user authentication", "option_2": "To define the structure of a model", "option_3": "To create URL patterns", "option_4": "To process requests and responses globally before they reach the view"}}, {"model": "quiz_app.djangoquizquestion", "pk": 15, "fields": {"question": "What is the Django template context?", "answer": "A dictionary that contains variables and their values for rendering templates", "option_1": "A library for handling front-end web development", "option_2": "A dictionary that contains variables and their values for rendering templates", "option_3": "A tool for testing Django applications", "option_4": "A built-in web-based interface for managing database records"}}, {"model": "quiz_app.djangoquizquestion", "pk": 16, "fields": {"question": "What is the purpose of a Django form?", "answer": "To handle form validation and data submission", "option_1": "To define the structure of a database table", "option_2": "To create HTML templates", "option_3": "To handle client-side scripting", "option_4": "To handle form validation and data submission"}}, {"model": "quiz_app.djangoquizquestion", "pk": 17, "fields": {"question": "What is the Django template tag used for including templates within templates?", "answer": "{% include %}", "option_1": "{% include %}", "option_2": "{% extends %}", "option_3": "{% block %}", "option_4": "{% load %}"}}, {"model": "quiz_app.djangoquizquestion", "pk": 18, "fields": {"question": "What is the purpose of a Django template filter?", "answer": "To process and format data in templates", "option_1": "To define the structure of a model", "option_2": "To create URL patterns", "option_3": "To handle client-side scripting", "option_4": "To process and format data in templates"}}, {"model": "quiz_app.djangoquizquestion", "pk": 19, "fields": {"question": "What is the Django database API called?", "answer": "DjangoORM", "option_1": "DjangoORM", "option_2": "DjangoDB", "option_3": "DjangoSQL", "option_4": "DjangoData"}}, {"model": "quiz_app.djangoquizquestion", "pk": 20, "fields": {"question": "How does Django handle routing and URL handling?", "answer": "By using URL patterns and views", "option_1": "By using URL patterns and views", "option_2": "By storing URLs in the database", "option_3": "By using third-party libraries only", "option_4": "By hardcoding URLs in HTML templates"}}, {"model": "quiz_app.djangoquizquestion", "pk": 21, "fields": {"question": "What is the purpose of a Django signal?", "answer": "To allow different parts of a Django application to communicate with each other", "option_1": "To define the structure of a model", "option_2": "To create URL patterns", "option_3": "To handle client-side scripting", "option_4": "To allow different parts of a Django application to communicate with each other"}}, {"model": "quiz_app.djangoquizquestion", "pk": 22, "fields": {"question": "What is the Django built-in authentication system called?", "answer": "Django.contrib.auth", "option_1": "DjangoAuth", "option_2": "Django.contrib.auth", "option_3": "DjangoAuthenticator", "option_4": "DjangoUsers"}}, {"model": "quiz_app.djangoquizquestion", "pk": 23, "fields": {"question": "What is the purpose of Django's context processors?", "answer": "To add additional variables to the template context", "option_1": "To define the structure of a model", "option_2": "To create URL patterns", "option_3": "To handle client-side scripting", "option_4": "To add additional variables to the template context"}}, {"model": "quiz_app.djangoquizquestion", "pk": 24, "fields": {"question": "What is the Django test framework used for?", "answer": "To write and run tests for Django applications", "option_1": "To define the structure of a model", "option_2": "To create URL patterns", "option_3": "To handle client-side scripting", "option_4": "To write and run tests for Django applications"}}, {"model": "quiz_app.djangoquizquestion", "pk": 25, "fields": {"question": "What is the purpose of Django's static files app?", "answer": "To serve static files such as CSS and JavaScript", "option_1": "To define the structure of a database table", "option_2": "To handle user authentication", "option_3": "To create HTML templates", "option_4": "To serve static files such as CSS and JavaScript"}}, {"model": "quiz_app.pythonquizquestion", "pk": 2, "fields": {"question": "What is Python?", "answer": "A scripting language", "option_1": "A scripting language", "option_2": "A compiled language", "option_3": "Both", "option_4": "None of the above"}}, {"model": "quiz_app.pythonquizquestion", "pk": 3, "fields": {"question": "Which of the following is not a primitive data type in Python?", "answer": "Array", "option_1": "Integer", "option_2": "Float", "option_3": "String", "option_4": "Array"}}, {"model": "quiz_app.pythonquizquestion", "pk": 4, "fields": {"question": "Which of the following is a valid Python variable name?", "answer": "All of the above", "option_1": "myVariableName", "option_2": "MyVariableName", "option_3": "my_variable_name", "option_4": "All of the above"}}, {"model": "quiz_app.pythonquizquestion", "pk": 5, "fields": {"question": "What is the output of the following code?\r\nx = 2\r\ny = 3\r\nprint(x+y)", "answer": "5", "option_1": "2", "option_2": "3", "option_3": "5", "option_4": "None of the above"}}, {"model": "quiz_app.pythonquizquestion", "pk": 6, "fields": {"question": "What is the output of the following code?\r\nmy_list = [1, 2, 3, 4, 5]\r\nprint(my_list[1:4])", "answer": "[2, 3, 4]", "option_1": "[1, 2, 3]", "option_2": "[2, 3, 4]", "option_3": "[2, 3, 4, 5]", "option_4": "[1, 2, 3, 4]"}}]